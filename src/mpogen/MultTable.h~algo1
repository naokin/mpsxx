{
  if(L == I) {
    if(S == I) {
    }
    if(S == Ci) {
    }
  }
  if(L == Ci) {
  }
  if(L == Ri) {
  }
  if(L == Cij) {
  }
  if(L == Rij) {
  }
  if(L == H) {
  }
}

template<op::CATEGORY lCat, op::CATEGORY sCat>
struct OpProduct {
};



{
  std::map<op::CATEGORY,size_t> oCatMap;
  oCatMap[op::I]            =  0;
  oCatMap[op::H]            =  1;
  oCatMap[op::CRE]          =  2;
  oCatMap[op::DES]          =  3;
  oCatMap[op::CRE_COMP]     =  4;
  oCatMap[op::DES_COMP]     =  5;
  oCatMap[op::CRE_CRE]      =  6;
  oCatMap[op::CRE_DES]      =  7;
  oCatMap[op::DES_CRE]      =  8;
  oCatMap[op::DES_DES]      =  9;
  oCatMap[op::CRE_CRE_COMP] = 10;
  oCatMap[op::CRE_DES_COMP] = 11;
  oCatMap[op::DES_CRE_COMP] = 12;
  oCatMap[op::DES_DES_COMP] = 13;

  std::vector<op::CATEGORY> oCatList = {
    op::I,            //  0
    op::H,            //  1
    op::CRE,          //  2
    op::DES,          //  3
    op::CRE_COMP,     //  4
    op::DES_COMP,     //  5
    op::CRE_CRE,      //  6
    op::CRE_DES,      //  7
    op::DES_CRE,      //  8
    op::DES_DES,      //  9
    op::CRE_CRE_COMP, // 10
    op::CRE_DES_COMP, // 11
    op::DES_CRE_COMP, // 12
    op::DES_DES_COMP  // 13
  };

  op::CATEGORY oCatTable[14][14];

  // I(L) x O(S) -> O(LS)
  for(size_t j = 0; j < 14; ++j)
    oCatTable[0][j] = oCatList[j];
  // O(L) x I(S) -> O(LS)
  for(size_t i = 1; i < 14; ++i)
    for(size_t j = 0; j < 14; ++j) {
      if(oCatList[j] == op::I)
        oCatTable[i][j] = oCatList[i];
      else
        oCatTable[i][j] = op::NONE;
    }
  }
  // Ci(L) x Cj(S) -> Cij(LS)
  oCatTable[ 2][ 2] = op::CRE_CRE;
  oCatTable[ 2][ 3] = op::CRE_DES;
  oCatTable[ 3][ 2] = op::DES_CRE;
  oCatTable[ 3][ 3] = op::DES_DES;
  // Ci(L) x Cjk(S) -> Rl(LS)
  oCatTable[ 2][ 7] = op::CRE_COMP; // Cre x CreDes -> CreComp
  oCatTable[ 3][ 6] = op::CRE_COMP; // Des x CreCre -> CreComp
  oCatTable[ 2][ 9] = op::DES_COMP; // Cre x DesDes -> DesComp
  oCatTable[ 3][ 8] = op::DES_COMP; // Des x DesCre -> DesComp
  // Ci(L) x Si(S) -> H
  oCatTable[ 2][ 5] = op::H;
  oCatTable[ 3][ 4] = op::H;
  // Si(L) x Ci(S) -> H
  oCatTable[ 4][ 3] = op::H;
  oCatTable[ 5][ 2] = op::H;
  // Cij(L) x Ck(S) -> Rl(LS)
  oCatTable[ 6][ 3] = op::CRE_COMP; // CreCre x Des -> CreComp
  oCatTable[ 7][ 2] = op::CRE_COMP; // CreDes x Cre -> CreComp
  oCatTable[ 8][ 3] = op::DES_COMP; // DesCre x Des -> DesComp
  oCatTable[ 9][ 2] = op::DES_COMP; // DesDes x Cre -> DesComp
  // Cij(L) x Ckl(S) -> H(LS)
  oCatTable[ 6][ 9] = op::H;
  oCatTable[ 7][ 7] = op::H;
  oCatTable[ 8][ 8] = op::H;
  oCatTable[ 9][ 6] = op::H;

  op::CATEGORY rcat = oCatTable[oCatMap[lop.category].second][oCatMap[sop.category]];
  if(rcat != op::NONE) {
    if(swap_comp_block) {
      rcat ^= op::ISCOMP;
      switch (rcat & op::ORDER) {
        case op::SINGLE:
          rcat ^= CONJ1; break;
        case op::DOUBLE:
          rcat ^= CONJ2; break;
      }
    }
  }

}

namespace op {

enum int CATEGORY
{
  NONE = -1,
  I    =  0,
  H,

  CREA,
  CREB,
  DESA,
  DESB,

  CREA_COMP,
  CREB_COMP,
  DESA_COMP,
  DESB_COMP,

  CREA_CREA,
  CREA_CREB,
  CREB_CREA,
  CREB_CREB,
  CREA_DESA,
  CREA_DESB,
  CREB_DESA,
  CREB_DESB,
  DESA_CREA,
  DESA_CREB,
  DESB_CREA,
  DESB_CREB,
  DESA_DESA,
  DESA_DESB,
  DESB_DESA,
  DESB_DESB,

  CREA_CREA_COMP,
  CREA_CREB_COMP,
  CREB_CREA_COMP,
  CREB_CREB_COMP,
  CREA_DESA_COMP,
  CREA_DESB_COMP,
  CREB_DESA_COMP,
  CREB_DESB_COMP,
  DESA_CREA_COMP,
  DESA_CREB_COMP,
  DESB_CREA_COMP,
  DESB_CREB_COMP,
  DESA_DESA_COMP,
  DESA_DESB_COMP,
  DESB_DESA_COMP,
  DESB_DESB_COMP,

  CREA_CREA_CREA,
  CREA_CREA_CREB,
  CREA_CREA_DESA,
  CREA_CREA_DESB,
  CREA_CREB_CREA,
  CREA_CREB_CREB,
  CREA_CREB_DESA,
  CREA_CREB_DESB,
  CREA_DESA_CREA,
  CREA_DESA_CREB,
  CREA_DESA_DESA,
  CREA_DESA_DESB,
  CREA_DESB_CREA,
  CREA_DESB_CREB,
  CREA_DESB_DESA,
  CREA_DESB_DESB,
  CREB_CREA_CREA,
  CREB_CREA_CREB,
  CREB_CREA_DESA,
  CREB_CREA_DESB,
  CREB_CREB_CREA,
  CREB_CREB_CREB,
  CREB_CREB_DESA,
  CREB_CREB_DESB,
  CREB_DESA_CREA,
  CREB_DESA_CREB,
  CREB_DESA_DESA,
  CREB_DESA_DESB,
  CREB_DESB_CREA,
  CREB_DESB_CREB,
  CREB_DESB_DESA,
  CREB_DESB_DESB,
  DESA_CREA_CREA,
  DESA_CREA_CREB,
  DESA_CREA_DESA,
  DESA_CREA_DESB,
  DESA_CREB_CREA,
  DESA_CREB_CREB,
  DESA_CREB_DESA,
  DESA_CREB_DESB,
  DESA_DESA_CREA,
  DESA_DESA_CREB,
  DESA_DESA_DESA,
  DESA_DESA_DESB,
  DESA_DESB_CREA,
  DESA_DESB_CREB,
  DESA_DESB_DESA,
  DESA_DESB_DESB,
  DESB_CREA_CREA,
  DESB_CREA_CREB,
  DESB_CREA_DESA,
  DESB_CREA_DESB,
  DESB_CREB_CREA,
  DESB_CREB_CREB,
  DESB_CREB_DESA,
  DESB_CREB_DESB,
  DESB_DESA_CREA,
  DESB_DESA_CREB,
  DESB_DESA_DESA,
  DESB_DESA_DESB,
  DESB_DESB_CREA,
  DESB_DESB_CREB,
  DESB_DESB_DESA,
  DESB_DESB_DESB,

  CREA_CREA_CREA_CREA,
  CREA_CREA_CREA_CREB,
  CREA_CREA_CREA_DESA,
  CREA_CREA_CREA_DESB,
  CREA_CREA_CREB_CREA,
  CREA_CREA_CREB_CREB,
  CREA_CREA_CREB_DESA,
  CREA_CREA_CREB_DESB,
  CREA_CREA_DESA_CREA,
  CREA_CREA_DESA_CREB,
  CREA_CREA_DESA_DESA,
  CREA_CREA_DESA_DESB,
  CREA_CREA_DESB_CREA,
  CREA_CREA_DESB_CREB,
  CREA_CREA_DESB_DESA,
  CREA_CREA_DESB_DESB,
  CREA_CREB_CREA_CREA,
  CREA_CREB_CREA_CREB,
  CREA_CREB_CREA_DESA,
  CREA_CREB_CREA_DESB,
  CREA_CREB_CREB_CREA,
  CREA_CREB_CREB_CREB,
  CREA_CREB_CREB_DESA,
  CREA_CREB_CREB_DESB,
  CREA_CREB_DESA_CREA,
  CREA_CREB_DESA_CREB,
  CREA_CREB_DESA_DESA,
  CREA_CREB_DESA_DESB,
  CREA_CREB_DESB_CREA,
  CREA_CREB_DESB_CREB,
  CREA_CREB_DESB_DESA,
  CREA_CREB_DESB_DESB,
  CREA_DESA_CREA_CREA,
  CREA_DESA_CREA_CREB,
  CREA_DESA_CREA_DESA,
  CREA_DESA_CREA_DESB,
  CREA_DESA_CREB_CREA,
  CREA_DESA_CREB_CREB,
  CREA_DESA_CREB_DESA,
  CREA_DESA_CREB_DESB,
  CREA_DESA_DESA_CREA,
  CREA_DESA_DESA_CREB,
  CREA_DESA_DESA_DESA,
  CREA_DESA_DESA_DESB,
  CREA_DESA_DESB_CREA,
  CREA_DESA_DESB_CREB,
  CREA_DESA_DESB_DESA,
  CREA_DESA_DESB_DESB,
  CREA_DESB_CREA_CREA,
  CREA_DESB_CREA_CREB,
  CREA_DESB_CREA_DESA,
  CREA_DESB_CREA_DESB,
  CREA_DESB_CREB_CREA,
  CREA_DESB_CREB_CREB,
  CREA_DESB_CREB_DESA,
  CREA_DESB_CREB_DESB,
  CREA_DESB_DESA_CREA,
  CREA_DESB_DESA_CREB,
  CREA_DESB_DESA_DESA,
  CREA_DESB_DESA_DESB,
  CREA_DESB_DESB_CREA,
  CREA_DESB_DESB_CREB,
  CREA_DESB_DESB_DESA,
  CREA_DESB_DESB_DESB,

  CREB_CREA_CREA_CREA,
  CREB_CREA_CREA_CREB,
  CREB_CREA_CREA_DESA,
  CREB_CREA_CREA_DESB,
  CREB_CREA_CREB_CREA,
  CREB_CREA_CREB_CREB,
  CREB_CREA_CREB_DESA,
  CREB_CREA_CREB_DESB,
  CREB_CREA_DESA_CREA,
  CREB_CREA_DESA_CREB,
  CREB_CREA_DESA_DESA,
  CREB_CREA_DESA_DESB,
  CREB_CREA_DESB_CREA,
  CREB_CREA_DESB_CREB,
  CREB_CREA_DESB_DESA,
  CREB_CREA_DESB_DESB,
  CREB_CREB_CREA_CREA,
  CREB_CREB_CREA_CREB,
  CREB_CREB_CREA_DESA,
  CREB_CREB_CREA_DESB,
  CREB_CREB_CREB_CREA,
  CREB_CREB_CREB_CREB,
  CREB_CREB_CREB_DESA,
  CREB_CREB_CREB_DESB,
  CREB_CREB_DESA_CREA,
  CREB_CREB_DESA_CREB,
  CREB_CREB_DESA_DESA,
  CREB_CREB_DESA_DESB,
  CREB_CREB_DESB_CREA,
  CREB_CREB_DESB_CREB,
  CREB_CREB_DESB_DESA,
  CREB_CREB_DESB_DESB,
  CREB_DESA_CREA_CREA,
  CREB_DESA_CREA_CREB,
  CREB_DESA_CREA_DESA,
  CREB_DESA_CREA_DESB,
  CREB_DESA_CREB_CREA,
  CREB_DESA_CREB_CREB,
  CREB_DESA_CREB_DESA,
  CREB_DESA_CREB_DESB,
  CREB_DESA_DESA_CREA,
  CREB_DESA_DESA_CREB,
  CREB_DESA_DESA_DESA,
  CREB_DESA_DESA_DESB,
  CREB_DESA_DESB_CREA,
  CREB_DESA_DESB_CREB,
  CREB_DESA_DESB_DESA,
  CREB_DESA_DESB_DESB,
  CREB_DESB_CREA_CREA,
  CREB_DESB_CREA_CREB,
  CREB_DESB_CREA_DESA,
  CREB_DESB_CREA_DESB,
  CREB_DESB_CREB_CREA,
  CREB_DESB_CREB_CREB,
  CREB_DESB_CREB_DESA,
  CREB_DESB_CREB_DESB,
  CREB_DESB_DESA_CREA,
  CREB_DESB_DESA_CREB,
  CREB_DESB_DESA_DESA,
  CREB_DESB_DESA_DESB,
  CREB_DESB_DESB_CREA,
  CREB_DESB_DESB_CREB,
  CREB_DESB_DESB_DESA,
  CREB_DESB_DESB_DESB,

  DESA_CREA_CREA_CREA,
  DESA_CREA_CREA_CREB,
  DESA_CREA_CREA_DESA,
  DESA_CREA_CREA_DESB,
  DESA_CREA_CREB_CREA,
  DESA_CREA_CREB_CREB,
  DESA_CREA_CREB_DESA,
  DESA_CREA_CREB_DESB,
  DESA_CREA_DESA_CREA,
  DESA_CREA_DESA_CREB,
  DESA_CREA_DESA_DESA,
  DESA_CREA_DESA_DESB,
  DESA_CREA_DESB_CREA,
  DESA_CREA_DESB_CREB,
  DESA_CREA_DESB_DESA,
  DESA_CREA_DESB_DESB,
  DESA_CREB_CREA_CREA,
  DESA_CREB_CREA_CREB,
  DESA_CREB_CREA_DESA,
  DESA_CREB_CREA_DESB,
  DESA_CREB_CREB_CREA,
  DESA_CREB_CREB_CREB,
  DESA_CREB_CREB_DESA,
  DESA_CREB_CREB_DESB,
  DESA_CREB_DESA_CREA,
  DESA_CREB_DESA_CREB,
  DESA_CREB_DESA_DESA,
  DESA_CREB_DESA_DESB,
  DESA_CREB_DESB_CREA,
  DESA_CREB_DESB_CREB,
  DESA_CREB_DESB_DESA,
  DESA_CREB_DESB_DESB,
  DESA_DESA_CREA_CREA,
  DESA_DESA_CREA_CREB,
  DESA_DESA_CREA_DESA,
  DESA_DESA_CREA_DESB,
  DESA_DESA_CREB_CREA,
  DESA_DESA_CREB_CREB,
  DESA_DESA_CREB_DESA,
  DESA_DESA_CREB_DESB,
  DESA_DESA_DESA_CREA,
  DESA_DESA_DESA_CREB,
  DESA_DESA_DESA_DESA,
  DESA_DESA_DESA_DESB,
  DESA_DESA_DESB_CREA,
  DESA_DESA_DESB_CREB,
  DESA_DESA_DESB_DESA,
  DESA_DESA_DESB_DESB,
  DESA_DESB_CREA_CREA,
  DESA_DESB_CREA_CREB,
  DESA_DESB_CREA_DESA,
  DESA_DESB_CREA_DESB,
  DESA_DESB_CREB_CREA,
  DESA_DESB_CREB_CREB,
  DESA_DESB_CREB_DESA,
  DESA_DESB_CREB_DESB,
  DESA_DESB_DESA_CREA,
  DESA_DESB_DESA_CREB,
  DESA_DESB_DESA_DESA,
  DESA_DESB_DESA_DESB,
  DESA_DESB_DESB_CREA,
  DESA_DESB_DESB_CREB,
  DESA_DESB_DESB_DESA,
  DESA_DESB_DESB_DESB,

  DESB_CREA_CREA_CREA,
  DESB_CREA_CREA_CREB,
  DESB_CREA_CREA_DESA,
  DESB_CREA_CREA_DESB,
  DESB_CREA_CREB_CREA,
  DESB_CREA_CREB_CREB,
  DESB_CREA_CREB_DESA,
  DESB_CREA_CREB_DESB,
  DESB_CREA_DESA_CREA,
  DESB_CREA_DESA_CREB,
  DESB_CREA_DESA_DESA,
  DESB_CREA_DESA_DESB,
  DESB_CREA_DESB_CREA,
  DESB_CREA_DESB_CREB,
  DESB_CREA_DESB_DESA,
  DESB_CREA_DESB_DESB,
  DESB_CREB_CREA_CREA,
  DESB_CREB_CREA_CREB,
  DESB_CREB_CREA_DESA,
  DESB_CREB_CREA_DESB,
  DESB_CREB_CREB_CREA,
  DESB_CREB_CREB_CREB,
  DESB_CREB_CREB_DESA,
  DESB_CREB_CREB_DESB,
  DESB_CREB_DESA_CREA,
  DESB_CREB_DESA_CREB,
  DESB_CREB_DESA_DESA,
  DESB_CREB_DESA_DESB,
  DESB_CREB_DESB_CREA,
  DESB_CREB_DESB_CREB,
  DESB_CREB_DESB_DESA,
  DESB_CREB_DESB_DESB,
  DESB_DESA_CREA_CREA,
  DESB_DESA_CREA_CREB,
  DESB_DESA_CREA_DESA,
  DESB_DESA_CREA_DESB,
  DESB_DESA_CREB_CREA,
  DESB_DESA_CREB_CREB,
  DESB_DESA_CREB_DESA,
  DESB_DESA_CREB_DESB,
  DESB_DESA_DESA_CREA,
  DESB_DESA_DESA_CREB,
  DESB_DESA_DESA_DESA,
  DESB_DESA_DESA_DESB,
  DESB_DESA_DESB_CREA,
  DESB_DESA_DESB_CREB,
  DESB_DESA_DESB_DESA,
  DESB_DESA_DESB_DESB,
  DESB_DESB_CREA_CREA,
  DESB_DESB_CREA_CREB,
  DESB_DESB_CREA_DESA,
  DESB_DESB_CREA_DESB,
  DESB_DESB_CREB_CREA,
  DESB_DESB_CREB_CREB,
  DESB_DESB_CREB_DESA,
  DESB_DESB_CREB_DESB,
  DESB_DESB_DESA_CREA,
  DESB_DESB_DESA_CREB,
  DESB_DESB_DESA_DESA,
  DESB_DESB_DESA_DESB,
  DESB_DESB_DESB_CREA,
  DESB_DESB_DESB_CREB,
  DESB_DESB_DESB_DESA,
  DESB_DESB_DESB_DESB,

  SIZE 
};

/// Table to get complementary operator category
static CATEGORY opCompTable[SIZE];

/// Table to get complementary operator category
static CATEGORY opConjTable[SIZE];

/// Table to get multiplied operator category
static CATEGORY opMultTable[SIZE][SIZE];

void setCompTable
{
  for(size_t i = 0; i < SIZE; ++i) opCompTable[i] = NONE;

  opCompTable[I] = H;
  opCompTable[H] = I;

  opCompTable[CREA] = CREA_COMP;
  opCompTable[CREB] = CREB_COMP;
  opCompTable[DESA] = DESA_COMP;
  opCompTable[DESB] = DESB_COMP;

  opCompTable[CREA_COMP] = CREA;
  opCompTable[CREB_COMP] = CREB;
  opCompTable[DESA_COMP] = DESA;
  opCompTable[DESB_COMP] = DESB;

  opCompTable[CREA_CREA] = CREA_CREA_COMP;
  opCompTable[CREA_CREB] = CREA_CREB_COMP;
  opCompTable[CREB_CREA] = CREB_CREA_COMP;
  opCompTable[CREB_CREB] = CREB_CREB_COMP;
  opCompTable[CREA_DESA] = CREA_DESA_COMP;
  opCompTable[CREA_DESB] = CREA_DESB_COMP;
  opCompTable[CREB_DESA] = CREB_DESA_COMP;
  opCompTable[CREB_DESB] = CREB_DESB_COMP;
  opCompTable[DESA_CREA] = DESA_CREA_COMP;
  opCompTable[DESA_CREB] = DESA_CREB_COMP;
  opCompTable[DESB_CREA] = DESB_CREA_COMP;
  opCompTable[DESB_CREB] = DESB_CREB_COMP;
  opCompTable[DESA_DESA] = DESA_DESA_COMP;
  opCompTable[DESA_DESB] = DESA_DESB_COMP;
  opCompTable[DESB_DESA] = DESB_DESA_COMP;
  opCompTable[DESB_DESB] = DESB_DESB_COMP;

  opCompTable[CREA_CREA_COMP] = CREA_CREA;
  opCompTable[CREA_CREB_COMP] = CREA_CREB;
  opCompTable[CREB_CREA_COMP] = CREB_CREA;
  opCompTable[CREB_CREB_COMP] = CREB_CREB;
  opCompTable[CREA_DESA_COMP] = CREA_DESA;
  opCompTable[CREA_DESB_COMP] = CREA_DESB;
  opCompTable[CREB_DESA_COMP] = CREB_DESA;
  opCompTable[CREB_DESB_COMP] = CREB_DESB;
  opCompTable[DESA_CREA_COMP] = DESA_CREA;
  opCompTable[DESA_CREB_COMP] = DESA_CREB;
  opCompTable[DESB_CREA_COMP] = DESB_CREA;
  opCompTable[DESB_CREB_COMP] = DESB_CREB;
  opCompTable[DESA_DESA_COMP] = DESA_DESA;
  opCompTable[DESA_DESB_COMP] = DESA_DESB;
  opCompTable[DESB_DESA_COMP] = DESB_DESA;
  opCompTable[DESB_DESB_COMP] = DESB_DESB;
}

void setConjTable
{
  for(size_t i = 0; i < SIZE; ++i) opConjTable[i] = NONE;

  opConjTable[I] = I;
  opConjTable[H] = H;

  opConjTable[CREA] = DESA;
  opConjTable[CREB] = DESB;
  opConjTable[DESA] = CREA;
  opConjTable[DESB] = CREB;

  opConjTable[CREA_COMP] = DESA_COMP;
  opConjTable[CREB_COMP] = DESB_COMP;
  opConjTable[DESA_COMP] = CREA_COMP;
  opConjTable[DESB_COMP] = CREB_COMP;

  opConjTable[CREA_CREA] = DESA_DESA;
  opConjTable[CREA_CREB] = DESB_DESA;
  opConjTable[CREB_CREA] = DESA_DESB;
  opConjTable[CREB_CREB] = DESB_DESB;
  opConjTable[CREA_DESA] = CREA_DESA;
  opConjTable[CREA_DESB] = CREB_DESA;
  opConjTable[CREB_DESA] = CREA_DESB;
  opConjTable[CREB_DESB] = CREB_DESB;
  opConjTable[DESA_CREA] = DESA_CREA;
  opConjTable[DESA_CREB] = DESB_CREA;
  opConjTable[DESB_CREA] = DESA_CREB;
  opConjTable[DESB_CREB] = DESB_CREB;
  opConjTable[DESA_DESA] = CREA_CREA;
  opConjTable[DESA_DESB] = CREB_CREA;
  opConjTable[DESB_DESA] = CREA_CREB;
  opConjTable[DESB_DESB] = CREB_CREB;

  opConjTable[CREA_CREA_COMP] = DESA_DESA_COMP;
  opConjTable[CREA_CREB_COMP] = DESB_DESA_COMP;
  opConjTable[CREB_CREA_COMP] = DESA_DESB_COMP;
  opConjTable[CREB_CREB_COMP] = DESB_DESB_COMP;
  opConjTable[CREA_DESA_COMP] = CREA_DESA_COMP;
  opConjTable[CREA_DESB_COMP] = CREB_DESA_COMP;
  opConjTable[CREB_DESA_COMP] = CREA_DESB_COMP;
  opConjTable[CREB_DESB_COMP] = CREB_DESB_COMP;
  opConjTable[DESA_CREA_COMP] = DESA_CREA_COMP;
  opConjTable[DESA_CREB_COMP] = DESB_CREA_COMP;
  opConjTable[DESB_CREA_COMP] = DESA_CREB_COMP;
  opConjTable[DESB_CREB_COMP] = DESB_CREB_COMP;
  opConjTable[DESA_DESA_COMP] = CREA_CREA_COMP;
  opConjTable[DESA_DESB_COMP] = CREB_CREA_COMP;
  opConjTable[DESB_DESA_COMP] = CREA_CREB_COMP;
  opConjTable[DESB_DESB_COMP] = CREB_CREB_COMP;
}

void setMultTable
{
  for(size_t i = 0; i < SIZE; ++i)
    for(size_t j = 0; j < SIZE; ++j) opMultTable[i][j] = NONE;

  // I(L) x O(S) -> O(LS)
  for(size_t j = 0; j < SIZE; ++j) opMultTable[I][j] = static_cast<CATEGORY>(j);

  // I(L) x O(S) -> O(LS)
  for(size_t j = 0; j < SIZE; ++j) opMultTable[j][I] = static_cast<CATEGORY>(j);

  // Ci(L) x Cj(S) -> Cij(LS)
  opMultTable[CREA][CREA] = CREA_CREA;
  opMultTable[CREA][CREB] = CREA_CREB;
  opMultTable[CREB][CREA] = CREB_CREA;
  opMultTable[CREB][CREB] = CREB_CREB;
  opMultTable[CREA][DESA] = CREA_DESA;
  opMultTable[CREA][DESB] = CREA_DESB;
  opMultTable[CREB][DESA] = CREB_DESA;
  opMultTable[CREB][DESB] = CREB_DESB;
  opMultTable[DESA][CREA] = DESA_CREA;
  opMultTable[DESA][CREB] = DESA_CREB;
  opMultTable[DESB][CREA] = DESB_CREA;
  opMultTable[DESB][CREB] = DESB_CREB;
  opMultTable[DESA][DESA] = DESA_DESA;
  opMultTable[DESA][DESB] = DESA_DESB;
  opMultTable[DESB][DESA] = DESB_DESA;
  opMultTable[DESB][DESB] = DESB_DESB;

  // Ci(L) x Cjk(S) -> Cijk(LS)
  opMultTable[CREA][CREA_CREA] = CREA_CREA_CREA;
  opMultTable[CREA][CREA_CREB] = CREA_CREA_CREB;
  opMultTable[CREA][CREA_DESA] = CREA_CREA_DESA;
  opMultTable[CREA][CREA_DESB] = CREA_CREA_DESB;
  opMultTable[CREA][CREB_CREA] = CREA_CREB_CREA;
  opMultTable[CREA][CREB_CREB] = CREA_CREB_CREB;
  opMultTable[CREA][CREB_DESA] = CREA_CREB_DESA;
  opMultTable[CREA][CREB_DESB] = CREA_CREB_DESB;
  opMultTable[CREA][DESA_CREA] = CREA_DESA_CREA;
  opMultTable[CREA][DESA_CREB] = CREA_DESA_CREB;
  opMultTable[CREA][DESA_DESA] = CREA_DESA_DESA;
  opMultTable[CREA][DESA_DESB] = CREA_DESA_DESB;
  opMultTable[CREA][DESB_CREA] = CREA_DESB_CREA;
  opMultTable[CREA][DESB_CREB] = CREA_DESB_CREB;
  opMultTable[CREA][DESB_DESA] = CREA_DESB_DESA;
  opMultTable[CREA][DESB_DESB] = CREA_DESB_DESB;
  opMultTable[CREB][CREA_CREA] = CREA_CREA_CREA;
  opMultTable[CREB][CREA_CREB] = CREA_CREA_CREB;
  opMultTable[CREB][CREA_DESA] = CREA_CREA_DESA;
  opMultTable[CREB][CREA_DESB] = CREA_CREA_DESB;
  opMultTable[CREB][CREB_CREA] = CREA_CREB_CREA;
  opMultTable[CREB][CREB_CREB] = CREA_CREB_CREB;
  opMultTable[CREB][CREB_DESA] = CREA_CREB_DESA;
  opMultTable[CREB][CREB_DESB] = CREA_CREB_DESB;
  opMultTable[CREB][DESA_CREA] = CREA_DESA_CREA;
  opMultTable[CREB][DESA_CREB] = CREA_DESA_CREB;
  opMultTable[CREB][DESA_DESA] = CREA_DESA_DESA;
  opMultTable[CREB][DESA_DESB] = CREA_DESA_DESB;
  opMultTable[CREB][DESB_CREA] = CREA_DESB_CREA;
  opMultTable[CREB][DESB_CREB] = CREA_DESB_CREB;
  opMultTable[CREB][DESB_DESA] = CREA_DESB_DESA;
  opMultTable[CREB][DESB_DESB] = CREA_DESB_DESB;
  opMultTable[DESA][CREA_CREA] = CREA_CREA_CREA;
  opMultTable[DESA][CREA_CREB] = CREA_CREA_CREB;
  opMultTable[DESA][CREA_DESA] = CREA_CREA_DESA;
  opMultTable[DESA][CREA_DESB] = CREA_CREA_DESB;
  opMultTable[DESA][CREB_CREA] = CREA_CREB_CREA;
  opMultTable[DESA][CREB_CREB] = CREA_CREB_CREB;
  opMultTable[DESA][CREB_DESA] = CREA_CREB_DESA;
  opMultTable[DESA][CREB_DESB] = CREA_CREB_DESB;
  opMultTable[DESA][DESA_CREA] = CREA_DESA_CREA;
  opMultTable[DESA][DESA_CREB] = CREA_DESA_CREB;
  opMultTable[DESA][DESA_DESA] = CREA_DESA_DESA;
  opMultTable[DESA][DESA_DESB] = CREA_DESA_DESB;
  opMultTable[DESA][DESB_CREA] = CREA_DESB_CREA;
  opMultTable[DESA][DESB_CREB] = CREA_DESB_CREB;
  opMultTable[DESA][DESB_DESA] = CREA_DESB_DESA;
  opMultTable[DESA][DESB_DESB] = CREA_DESB_DESB;
  opMultTable[DESB][CREA_CREA] = CREA_CREA_CREA;
  opMultTable[DESB][CREA_CREB] = CREA_CREA_CREB;
  opMultTable[DESB][CREA_DESA] = CREA_CREA_DESA;
  opMultTable[DESB][CREA_DESB] = CREA_CREA_DESB;
  opMultTable[DESB][CREB_CREA] = CREA_CREB_CREA;
  opMultTable[DESB][CREB_CREB] = CREA_CREB_CREB;
  opMultTable[DESB][CREB_DESA] = CREA_CREB_DESA;
  opMultTable[DESB][CREB_DESB] = CREA_CREB_DESB;
  opMultTable[DESB][DESA_CREA] = CREA_DESA_CREA;
  opMultTable[DESB][DESA_CREB] = CREA_DESA_CREB;
  opMultTable[DESB][DESA_DESA] = CREA_DESA_DESA;
  opMultTable[DESB][DESA_DESB] = CREA_DESA_DESB;
  opMultTable[DESB][DESB_CREA] = CREA_DESB_CREA;
  opMultTable[DESB][DESB_CREB] = CREA_DESB_CREB;
  opMultTable[DESB][DESB_DESA] = CREA_DESB_DESA;
  opMultTable[DESB][DESB_DESB] = CREA_DESB_DESB;

  // Cij(L) x Ck(S) -> Cijk(LS)
  opMultTable[CREA_CREA][CREA] = CREA_CREA_CREA;
  opMultTable[CREA_CREA][CREB] = CREA_CREA_CREB;
  opMultTable[CREA_CREA][DESA] = CREA_CREA_DESA;
  opMultTable[CREA_CREA][DESB] = CREA_CREA_DESB;
  opMultTable[CREA_CREB][CREA] = CREA_CREB_CREA;
  opMultTable[CREA_CREB][CREB] = CREA_CREB_CREB;
  opMultTable[CREA_CREB][DESA] = CREA_CREB_DESA;
  opMultTable[CREA_CREB][DESB] = CREA_CREB_DESB;
  opMultTable[CREA_DESA][CREA] = CREA_DESA_CREA;
  opMultTable[CREA_DESA][CREB] = CREA_DESA_CREB;
  opMultTable[CREA_DESA][DESA] = CREA_DESA_DESA;
  opMultTable[CREA_DESA][DESB] = CREA_DESA_DESB;
  opMultTable[CREA_DESB][CREA] = CREA_DESB_CREA;
  opMultTable[CREA_DESB][CREB] = CREA_DESB_CREB;
  opMultTable[CREA_DESB][DESA] = CREA_DESB_DESA;
  opMultTable[CREA_DESB][DESB] = CREA_DESB_DESB;
  opMultTable[CREB_CREA][CREA] = CREA_CREA_CREA;
  opMultTable[CREB_CREA][CREB] = CREA_CREA_CREB;
  opMultTable[CREB_CREA][DESA] = CREA_CREA_DESA;
  opMultTable[CREB_CREA][DESB] = CREA_CREA_DESB;
  opMultTable[CREB_CREB][CREA] = CREA_CREB_CREA;
  opMultTable[CREB_CREB][CREB] = CREA_CREB_CREB;
  opMultTable[CREB_CREB][DESA] = CREA_CREB_DESA;
  opMultTable[CREB_CREB][DESB] = CREA_CREB_DESB;
  opMultTable[CREB_DESA][CREA] = CREA_DESA_CREA;
  opMultTable[CREB_DESA][CREB] = CREA_DESA_CREB;
  opMultTable[CREB_DESA][DESA] = CREA_DESA_DESA;
  opMultTable[CREB_DESA][DESB] = CREA_DESA_DESB;
  opMultTable[CREB_DESB][CREA] = CREA_DESB_CREA;
  opMultTable[CREB_DESB][CREB] = CREA_DESB_CREB;
  opMultTable[CREB_DESB][DESA] = CREA_DESB_DESA;
  opMultTable[CREB_DESB][DESB] = CREA_DESB_DESB;
  opMultTable[DESA_CREA][CREA] = CREA_CREA_CREA;
  opMultTable[DESA_CREA][CREB] = CREA_CREA_CREB;
  opMultTable[DESA_CREA][DESA] = CREA_CREA_DESA;
  opMultTable[DESA_CREA][DESB] = CREA_CREA_DESB;
  opMultTable[DESA_CREB][CREA] = CREA_CREB_CREA;
  opMultTable[DESA_CREB][CREB] = CREA_CREB_CREB;
  opMultTable[DESA_CREB][DESA] = CREA_CREB_DESA;
  opMultTable[DESA_CREB][DESB] = CREA_CREB_DESB;
  opMultTable[DESA_DESA][CREA] = CREA_DESA_CREA;
  opMultTable[DESA_DESA][CREB] = CREA_DESA_CREB;
  opMultTable[DESA_DESA][DESA] = CREA_DESA_DESA;
  opMultTable[DESA_DESA][DESB] = CREA_DESA_DESB;
  opMultTable[DESA_DESB][CREA] = CREA_DESB_CREA;
  opMultTable[DESA_DESB][CREB] = CREA_DESB_CREB;
  opMultTable[DESA_DESB][DESA] = CREA_DESB_DESA;
  opMultTable[DESA_DESB][DESB] = CREA_DESB_DESB;
  opMultTable[DESB_CREA][CREA] = CREA_CREA_CREA;
  opMultTable[DESB_CREA][CREB] = CREA_CREA_CREB;
  opMultTable[DESB_CREA][DESA] = CREA_CREA_DESA;
  opMultTable[DESB_CREA][DESB] = CREA_CREA_DESB;
  opMultTable[DESB_CREB][CREA] = CREA_CREB_CREA;
  opMultTable[DESB_CREB][CREB] = CREA_CREB_CREB;
  opMultTable[DESB_CREB][DESA] = CREA_CREB_DESA;
  opMultTable[DESB_CREB][DESB] = CREA_CREB_DESB;
  opMultTable[DESB_DESA][CREA] = CREA_DESA_CREA;
  opMultTable[DESB_DESA][CREB] = CREA_DESA_CREB;
  opMultTable[DESB_DESA][DESA] = CREA_DESA_DESA;
  opMultTable[DESB_DESA][DESB] = CREA_DESA_DESB;
  opMultTable[DESB_DESB][CREA] = CREA_DESB_CREA;
  opMultTable[DESB_DESB][CREB] = CREA_DESB_CREB;
  opMultTable[DESB_DESB][DESA] = CREA_DESB_DESA;
  opMultTable[DESB_DESB][DESB] = CREA_DESB_DESB;

}
